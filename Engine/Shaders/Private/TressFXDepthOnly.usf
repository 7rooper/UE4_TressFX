//
// Copyright (c) 2017 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

//Unreal Engin 4 integration written by Leon Rosengarten 2017
#include "Common.ush"
#include "TressFXRendering.ush"
#include "TressFXStrands.ush"

struct PS_INPUT_HAIR
{
    float4 Position : SV_POSITION;
    float4 Tangent : TANGENT;
    float4 p0p1 : TEXCOORD0;
    float3 strandColor : TEXCOORD1;

};

PS_INPUT_HAIR VS_RenderHair_AA(uint vertexId : SV_VertexID)
{
    TressFXVertex tressfxVert = GetExpandedTressFXVert(vertexId, View.WorldCameraOrigin.xzy, View.ViewSizeAndInvSize.xy, View.WorldToClip);
 
    PS_INPUT_HAIR Output;

    Output = (PS_INPUT_HAIR) 0;
 
    Output.Position = tressfxVert.Position;
    Output.Tangent = tressfxVert.Tangent;
    Output.p0p1 = tressfxVert.p0p1;
    Output.strandColor = tressfxVert.strandColor;
    return Output;
}


float main_PS(in PS_INPUT_HAIR Input) : SV_Target
{	
    return float(1 - Input.Position.z);
}
