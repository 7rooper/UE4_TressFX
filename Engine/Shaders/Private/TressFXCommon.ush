//
// Copyright (c) 2017 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

//Unreal Engine 4 integration written by Leon Rosengarten and Jacob Kostenick 2019

#ifndef TRESS_FX_COMMON_USH
#define TRESS_FX_COMMON_USH

#ifndef AMD_TRESSFX_MAX_NUM_BONES
	#define AMD_TRESSFX_MAX_NUM_BONES 256
#endif

// same as c++ and exporter
#ifndef TRESSFX_MAX_INFLUENTIAL_BONE_COUNT
	#define TRESSFX_MAX_INFLUENTIAL_BONE_COUNT 16
#endif

struct FBoneIndexData
{
    int StartIdx;
    int BoneCount;
};

struct FBoneSkinningData
{
    float BoneIndex;
    float BoneWeight;
};


cbuffer TressfxShadeParameters
{
    float g_FiberRadius;
    float g_FiberSpacing;
    int g_NumVerticesPerStrand;
    float g_ratio;
    float4 TressFXSettings1;
    float4 TressFXSettings2;
    float4 TressFXSettings3;
    float4 TressFXSpecularColor;
	float g_RootTangentBlending;
};

float GetGlintStrength()
{
    return TressFXSettings3.x;
}

float GetGlintSize()
{
    return TressFXSettings3.y;
}

float GetGlintExponent()
{
    return TressFXSettings3.z;
}

float GetPrimarySpecularScale()
{
    return TressFXSettings1.x;
}

float GetPrimarySpecularExponent()
{
    return TressFXSettings1.y;
}

float GetSecondarySpecularScale()
{
    return TressFXSettings1.z;
}

float GetSecondarySpecularExponent()
{
    return TressFXSettings1.w;
}

float GetDiffuseBlend()
{
    return TressFXSettings2.x;
}

float GetTressFXSelfShadowStrength()
{
    return TressFXSettings2.y;
}

float3 GetTressFXSpecularColor()
{
    return TressFXSpecularColor.xyz;
}
#endif 